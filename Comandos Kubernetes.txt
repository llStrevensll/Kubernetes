comandos kubernetes:

kubectl run my-nginx --image=nginx   -> version 1.17

kubectl get pods 

kubectl describe pods  

kubectl get pods -o wide   -> ver ip del pod y node

kubectl get all

kubectl delete deployment my-nginx 

kubectl run my-nginx --image=nginx --restart=Never -> Crear solo el pod

kubectl get all

kubectl delete pod my-nginx  ->Eliminar pod

kubectl get all

======================
kubectl run pingpong --image alpine ping 1.1.1.1
kubectl get all
kubectl logs deploy/pingpong

kubectl scale deploy/pingpong --replicas 3
kubectl get all

//--tail muestra la ultima linea de los log
//--flow sigue dando los datos de futuro de los logs nuevos
kubectl logs deploy/pingpong --tail 1 --follow
kubectl get all

//especificar nombre(name) del pod para ver sus logs
kubectl logs pod/pingpong-c849c8bbc-65dc6 --follow 

kubectl delete deployment pingpong
kubectl get all

=====
Pod:

kubectl create -f podtest.yml  -> crear solo el pod
kubectl describe pods
kubectl get all
kubectl delete pod app1-pod

kubectl apply -f podtest.yml  -> crear y modificar
kubectl get pods
kubeclt get pods -o wide
kubectl delete pod app1-pod
kubectl get all

======
ReplicationController:

kubectl apply -f rctest.yml
kubectl get replicationcontroller
kubectl get pods
kubectl delete pod app1-rc-hsk87 -> elimina el pod pero se creara automaticamente uno nuevo por el replicationController
kubectl get pods
kubectl delete replicationcontroller app1-rc
kubectl get pods
kubectl get all

========
ReplicaSet
kubectl apply -f rstest.yml
kubectl get replicaset
kubectl get pods
kubectl delete pod app1-rs-4wcq7   ->name pod
kubectl get pods

//replicaset tiene configurado solo 4 replicas
//si se crea otro pod lo eliminara
kubectl apply -f podtest.yml
kubectl describe replicaset
kubectl get all

//cambiar config de replica a 6
kubectl apply -f rstest.yml
--salida: replicaset.apps/app1-rs configured
kubectl get replicaset

//escalar hacia abajo
kubectl scale --replicas=2 -f rstest.yml
kubectl get pods
kubectl delete replicaset app1-rs


=====
Deployment
kubectl apply -f dptest.yml
kubectl describe deployment
kubectl scale deploy/app1-dp --replicas 2
kubectl describe deployment
kubectl get all
kubectl delete deployment app1-dp
kubectl get all

=====
Update and Rollback

nano dptest.yml   
kubectl get all  
kubectl apply -f dptest.yml 
kubectl describe deployment 
kubectl rollout status deploy/app1-dp
kubectl rollout history deploy/app1-dp
kubectl delete deployment app1-dp

kubectl apply -f dptest.yml --record
kubectl rollout history deploy/app1-dp

//cambiar imagen del deployment, pero no actualiza el archivo yml
kubectl set image deployment/app1-dp nginx-container=nginx:1.17.10

kubectl rollout status deploy/app1-dp
kubectl rollout history deploy/app1-dp

Rollback
kubectl rollout undo deployment/app1-dp
kubectl rollout status deploy/app1-dp
kubectl rollout history deploy/app1-dp
kubectl get all

//error en la imagen
kubectl set image deployment/app1-dp nginx-container=nginx:1.17.error
kubectl rollout status deploy/app1-dp
kubectl get all

kubectl rollout undo deployment/app1-dp
kubectl rollout history deploy/app1-dp 
kubectl describe deployment
kubectl get all

kubectl delete deployment app1-dp
kubectl get all
======================================
Servicios kubernetes

kubectl apply -f dptest.yml
kubectl apply -f servicetest.yml
kubectl get all  
kubectl get services 
curl localhost:30200  

kubectl apply -f service2test.yml
kubectl get all 
kubectl get services  

kubectl delete deployment app1-dp
kubectl delete service app1-clusteriptest
kubectl delete service app1-service

=======
Namespace

kubectl get namespaces
kubectl get pods --all-namespaces

//comandos iguales:
kubectl get pods -n kube-system
kubectl get pods --namespace=kube-system
kubectl get po -n kube-system

kubectl apply -f dptest.yml
kubectl get po -n default

======
ConfigMaps
https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/

//Multiples archivos dentro de un directorio

# Create the local directory
mkdir -p configure-pod-container/configmap/

# Download the sample files into `configure-pod-container/configmap/` directory
wget https://kubernetes.io/examples/configmap/game.properties -O configure-pod-container/configmap/game.properties
wget https://kubernetes.io/examples/configmap/ui.properties -O configure-pod-container/configmap/ui.properties

# Create the configmap
kubectl create configmap game-config --from-file=configure-pod-container/configmap/


kubectl get configmap
kubectl get configmap -o wide
kubectl get configmap game-config -o yaml

kubectl delete configmap game-config

-----
ConfigMaps sobre un unico archivo
https://kubernetes.io/docs/tutorials/configuration/configure-redis-using-configmap/

//redis-config

curl -OL https://k8s.io/examples/pods/config/redis-config
cat redis-config
kubectl create configmap example-redis-config --from-file=redis-config
kubectl get configmaps
kubectl describe configmap example-redis-config

//crear pod
kubectl create -f configmap.yml
kubectl get all

kubectl exec redis cat /redis-master/redis.conf
kubectl exec --stdin --tty redis -- /bin/bash

======
Configmap con valores literales

kubectl create configmap special-config --from-literal=special.how=very
kubectl get configmaps

kubectl apply -f configmap2.yml
kubectl logs test-pod | grep SPECIAL

kubectl delete pod test-pod
kubectl delete configmap special-config
=======

Secrets

echo -n 'admin' > ./username.txt
echo -n 'plsd89j' ./password.txt
kubectl create secret generic db-user-pass --from-file./username.txt --from-file=./password.txt
kubectl get secrets
kubectl describe secrets db-user-pass
kubectl delete secret db-user-pass

secrets usando archivos de manifiesto (manifest files)
decodificar secrets

echo -n 'admin' | base64
echo -n 'password' | base64

kubectl apply -f mysecret.yml
kubectl get secrets
kubectl describe secrets mysecret

kubectl get secrets mysecret -o yaml

echo 'YWRtaW4=' | base64 --decode
echo 'cGFzc3dvcmQ=' | base64 --decode
kubectl delete secret mysecret

----
secrets in pod

kubectl apply -f mysecret-pod.yml
kubectl get pods
kubectl exec mypod ls /etc/foo
kubectl exec mypod cat /etc/foo/username
kubectl exec mypod cat /etc/foo/password

kubectl delete pod mypod

---
secret with env

kubectl apply -f mysecret-env-pod.yml
kubectl exec secret-env-pod env | grep SECRET
kubectl delete pod secret-env-pod
kubectl delete secret mysecret


